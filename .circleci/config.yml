#================================================================================================
# NOTE: See Pantheon example WP repo for original version this config file was based off of
# https://github.com/pantheon-systems/example-wordpress-composer/blob/master/.circleci/config.yml
# Replacements: you will need to replace the paths for the build and delpoy scripts to be specific # to your project. Replace threespot-wp-sandbox with correct name
#================================================================================================
# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/build-tools-ci:6.x
  working_directory: ~/example_wordpress_composer
  environment:
    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/environment-variables/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:      The email address to use when making commits
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    # ACF_PRO_KEY:    The license key for Advanced Custom Fields Pro
    #=========================================================================
    # Timezone
    TZ: '/usr/share/zoneinfo/America/New_York'

    # The variables below usually do not need to be modified.

    #======================================================================================================================================
    # Circle CI 2.0 does not yet expand environment variables so they have to be manually EXPORTed
    # Once environment variables can be expanded the variables below can be uncommented and the EXPORTs in set-up-globals.sh can be removed
    # See: https://discuss.circleci.com/t/unclear-how-to-work-with-user-variables-circleci-provided-env-variables/12810/11
    # See: https://discuss.circleci.com/t/environment-variable-expansion-in-working-directory/11322
    # See: https://discuss.circleci.com/t/circle-2-0-global-environment-variables/8681
    #======================================================================================================================================
    # See set-up-globals.sh for more environment variables

    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    ADMIN_USERNAME: admin
    TERM: dumb

version: 2
jobs:
  build_and_deploy:
    <<: *defaults
    # override the default image with drupaldocker/php as this job
    # doesn't need Pantheon specific items such as Terminus that are
    # in the quay.io/pantheon-public/build-tools-ci image
    docker:
      - image: circleci/php:7.4-cli
    steps:
      - checkout

      # Caching docs https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - composer-cache
            - terminus-install
            - yarn-packages-{{ checksum "web/wp-content/themes/threespot-wp-sandbox/yarn.lock" }}
            - yarn-packages- # used if checksum fails

      - run:
          name: dependencies
          command: bash ./.circleci/set-up-globals.sh

      - run:
          name: install composer dependencies
          command: composer install --no-ansi --no-interaction --optimize-autoloader --no-progress

      - run:
          name: composer build assets
          command: composer -n build-assets

      - run:
          name: install theme composer dependencies
          command: cd web/wp-content/themes/threespot-wp-sandbox && composer install

      - run:
          name: install theme yarn dependencies
          command: cd web/wp-content/themes/threespot-wp-sandbox && yarn install

      - run:
          name: build theme assets
          # Weâ€™re also running `yarn build:nohash` to generate un-hashed files for 3rd-party usage (e.g. sEngaging Networks)
          command: cd web/wp-content/themes/threespot-wp-sandbox && yarn build:production

      - run:
          name: deploy to Pantheon
          command: bash ./.ci/deploy-to-pantheon.sh

      - save_cache:
          name: cache Composer files
          key: composer-cache
          paths:
            - $HOME/.composer/cache

      - save_cache:
          name: cache Terminus files
          key: terminus-install
          paths:
            - $HOME/.terminus
            - $HOME/terminus

      - save_cache:
          name: cache Yarn files
          key: yarn-packages-{{ checksum "web/wp-content/themes/threespot-wp-sandbox/yarn.lock" }}
          paths:
            - $HOME/.cache/yarn

      - persist_to_workspace:
          # Must be relative path from working_directory
          root: .
          # Must be relative path from root
          paths:
            - vendor

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_deploy
