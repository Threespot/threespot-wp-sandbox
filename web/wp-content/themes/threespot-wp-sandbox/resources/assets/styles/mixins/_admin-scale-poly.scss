//------------------------------------------------------------------------
// NOTE: We need to override fs-scale-poly() to use fs-media() instead of
//       fs-min-width() since weâ€™re overriding fs-min-width() for the WP admin
//
// Original source:
// https://github.com/Threespot/frontline-sass/blob/master/src/mixins/_scale-poly.scss
//------------------------------------------------------------------------
@mixin fs-scale-poly($properties, $map, $initial: true, $units: 'rem') {
  $length: length($map);

  @if ($length < 2) {
    @error "fs-scale() requires at least two breakpoints";
  }

  $breakpoints: map-keys($map);
  $values: map-values($map);

  // Initial value
  $start-val: nth($values, 1);

  @if $initial {
    @each $property in $properties {
      @if $units == 'em' {
        #{$property}: fs-em($start-val);
      }
      @else {
        #{$property}: fs-rem($start-val);
      }
    }
  }

  // Scale up with calc() at each breakpoint
  @for $i from 1 through ($length - 1) {
    $start-breakpoint: nth($breakpoints, $i);
    $end-breakpoint: nth($breakpoints, $i + 1);
    $start-value: nth($values, $i);
    $end-value: nth($values, $i + 1);

    @if length($start-value) > 2 {
      @warn "fs-scale(): #{$start-breakpoint}: (#{$start-value}) contains too many values, only the first two will be used";
    }

    @if length($end-value) > 2 {
      @warn "fs-scale(): #{$end-breakpoint}: (#{$end-value}) contains too many values, only the first two will be used";
    }

    // If multiple start values exist, use the second one.
    // Note: The first value was the ending value in the previous media query.
    @if length($start-value) > 1 {
      // If multiple end values exist, use the first one.
      $new-end-value: if(length($end-value) > 1, nth($end-value, 1), $end-value);

      @include fs-media((min-width: $start-breakpoint)) {
        @each $property in $properties {
          #{$property}: fs-scale(nth($start-value, 2), $new-end-value, $start-breakpoint, $end-breakpoint, $units);
        }
      }
    }
    // If muliple ending values exist, use the first one.
    @else if length($end-value) > 1 {
      @include fs-media((min-width: $start-breakpoint)) {
        @each $property in $properties {
          #{$property}: fs-scale($start-value, nth($end-value, 1), $start-breakpoint, $end-breakpoint, $units);
        }
      }
    }
    // Single values
    @else {
      @include fs-media((min-width: $start-breakpoint)) {
        @each $property in $properties {
          #{$property}: fs-scale($start-value, $end-value, $start-breakpoint, $end-breakpoint, $units);
        }
      }
    }
  }

  // Final value
  $end-val: nth($values, $length);
  $end-breakpoint: nth($breakpoints, $length);

  @include fs-media((min-width: $end-breakpoint)) {
    @each $property in $properties {
      @if $units == 'em' {
        #{$property}: fs-em($end-val);
      }
      @else {
        #{$property}: fs-rem($end-val);
      }
    }
  }
}
